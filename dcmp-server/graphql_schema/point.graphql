type Query {
  "Given a points's id, returns that point"
  point("The point's ID" id: ID): Point

  "Get the list maps of a given size starting at a given page"
  pointList(
    "query object for more specific searches"
    query: PointListQuery

    "The number of points to return (default 10)"
    size: Int

    "The index of the page to return (default 0)"
    page: Int
  ): [Point]
}

type Mutation {
  "Given a points's id, returns that point"
  point("The point's ID" id: ID): Point

  "Get the list maps of a given size starting at a given page"
  pointList(
    "query object for more specific searches"
    query: PointListQuery

    "The number of points to return (default 10)"
    size: Int

    "The index of the page to return (default 0)"
    page: Int
  ): [Point]
}

"Filter which can be applyed to mapList"
input MapListQuery {
  "The ID of the point's map"
  mapID: ID

  "name of the creator of the map"
  creatorName: String

  "the category of the point"
  category: String
}